// 手撕后序遍历

func postOrder2023(root *TreeNode) {
    if root == nil {
        return
    }
    // step1: 准备1个辅助栈 stack 和 收集栈 collect
    stack, collect := make([]*TreeNode, 0, 64), make([]*TreeNode, 0, 64)
    // step2: 根节点入stack
    stack = append(stack, root)

    fot len(stack) > 0{
        // step3: 若栈非空，弹出一个cur, 并将cur入收集栈
        cur := stack(len(stack)-1)
        stack = stack[:len(stack)-1]
        collect = append(collect, cur)
        // step4: cur左孩子先进，右孩子再进
        if cur.Left != nil {
            stack = append(stack, cur.Left)
        }
        if cur.Right != nil {
            stack = append(stack, cur.Right)
        }
    }


    // step5: 打印收集栈中值
    for i := len(collect) - 1; i >= 0; i-- {
        fmt.Println(collect[i].Val)
    }
}